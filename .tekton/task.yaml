---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-clone-task
spec:
  params:
  - name: revision
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: clone
      # public.ecr.aws/docker/library/alpine:3.20.3
      image: public.ecr.aws/docker/library/alpine@sha256:029a752048e32e843bd6defe3841186fb8d19a28dae8ec287f433bb9d6d1ad85
      script: |
        #!/bin/sh
        echo "Installing git"
        apk fix && apk --no-cache --update add git gpg less openssh patch
        echo "Cloning repo"
        cd /workspace && git clone --depth 1 -b $(params.revision) https://github.com/instana/python-sensor
        ls -lah /workspace
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-unittest-cassandra-task
spec:
  sidecars:
    - name: cassandra
      # public.ecr.aws/docker/library/cassandra:3.11.16-jammy
      image: public.ecr.aws/docker/library/cassandra@sha256:b175d99b80f8108594d00c705288fdb3186b9fc07b30b4c292c3592cddb5f0b5
      env:
        - name: MAX_HEAP_SIZE
          value: 2048m
        - name: HEAP_NEWSIZE
          value: 512m
      readinessProbe:
        exec:
          command:
          - cqlsh
          - -e
          - 'describe cluster'
        initialDelaySeconds: 20
  params:
  - name: imageDigest
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: public.ecr.aws/docker/library/python@$(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: cassandra
      workingDir: /workspace/python-sensor/
      command:
      - /workspace/python-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-unittest-gevent-starlette-task
spec:
  params:
  - name: imageDigest
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: public.ecr.aws/docker/library/python@$(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: gevent_starlette
      workingDir: /workspace/python-sensor/
      command:
      - /workspace/python-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-unittest-default-task
spec:
  sidecars:
    - name: google-cloud-pubsub
      # quay.io/thekevjames/gcloud-pubsub-emulator
      image: quay.io/thekevjames/gcloud-pubsub-emulator@sha256:9bad1f28e6a3d6cd5f462c654c736faa4cf49732d9422ddb427ad30f3037c0ff
      env:
        - name: PUBSUB_EMULATOR_HOST
          value: 0.0.0.0:8681
        - name: PUBSUB_PROJECT1
          value: test-project,test-topic
      ports:
        - containerPort: 8681
          hostPort: 8681
    - name: mariadb
      # public.ecr.aws/docker/library/mariadb:11.3.2
      image: public.ecr.aws/docker/library/mariadb@sha256:a4a81ab6d190db84b67f286fd0511cdea619a24b63790b3db4fb69d263a5cd37
      env:
        - name: MYSQL_ROOT_PASSWORD # or MARIADB_ROOT_PASSWORD
          value: passw0rd
        - name: MYSQL_DATABASE # or MARIADB_DATABASE
          value: instana_test_db
    - name: mongo
      # public.ecr.aws/docker/library/mongo:7.0.6
      image: public.ecr.aws/docker/library/mongo@sha256:3a023748ee30e915dd51642f1ef430c73c4e54937060054ca84c70417f510cc5
    - name: postgres
      # public.ecr.aws/docker/library/postgres:16.2-bookworm
      image: public.ecr.aws/docker/library/postgres@sha256:07572430dbcd821f9f978899c3ab3a727f5029be9298a41662e1b5404d5b73e0
      env:
        - name: POSTGRES_USER
          value: root
        - name: POSTGRES_PASSWORD
          value: passw0rd
        - name: POSTGRES_DB
          value: instana_test_db
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - pg_isready --host 127.0.0.1 --port 5432 --dbname=${POSTGRES_DB}
        timeoutSeconds: 10
    - name: redis
      # public.ecr.aws/docker/library/redis:7.2.4-bookworm
      image: public.ecr.aws/docker/library/redis@sha256:9341b6548cc35b64a6de0085555264336e2f570e17ecff20190bf62222f2bd64
    - name: rabbitmq
      # public.ecr.aws/docker/library/rabbitmq:3.13.0
      image: public.ecr.aws/docker/library/rabbitmq@sha256:39de1a4fc6c72d12bd5dfa23e8576536fd1c0cc8418344cd5a51addfc9a1145d
    - name: kafka
      # public.ecr.aws/bitnami/kafka:3.9.0
      image: public.ecr.aws/bitnami/kafka@sha256:d2890d68f96b36da3c8413fa94294f018b2f95d87cf108cbf71eab510572d9be
      env:
        - name: KAFKA_CFG_NODE_ID
          value: "0"
        - name: KAFKA_CFG_PROCESS_ROLES
          value: "controller,broker"
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka:9093"
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"
    
  params:
  - name: imageDigest
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: public.ecr.aws/docker/library/python@$(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: default
      workingDir: /workspace/python-sensor/
      command:
      - /workspace/python-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-unittest-aws-task
spec:
  params:
  - name: imageDigest
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: public.ecr.aws/docker/library/python@$(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: aws
      workingDir: /workspace/python-sensor/
      command:
      - /workspace/python-sensor/.tekton/run_unittests.sh
