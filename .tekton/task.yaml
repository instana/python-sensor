---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-clone-task
spec:
  params:
  - name: revision
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: clone
      image: public.ecr.aws/docker/library/alpine:latest
      script: |
        #!/bin/sh
        echo "Installing git"
        apk fix && apk --no-cache --update add git gpg less openssh patch
        echo "Cloning repo"
        cd /workspace && git clone --depth 1 -b $(params.revision) https://github.com/instana/python-sensor
        ls -lah /workspace
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-unittest-cassandra-task
spec:
  sidecars:
    - name: cassandra
      image: public.ecr.aws/docker/library/cassandra:3.11.16-jammy
      env:
        - name: MAX_HEAP_SIZE
          value: 2048m
        - name: HEAP_NEWSIZE
          value: 512m
      readinessProbe:
        exec:
          command:
          - cqlsh
          - -e
          - 'describe cluster'
        initialDelaySeconds: 20
  params:
  - name: imageDigest
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: cassandra
      workingDir: /workspace/python-sensor/
      command:
      - /workspace/python-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-unittest-gevent-starlette-task
spec:
  params:
  - name: imageDigest
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: gevent_starlette
      workingDir: /workspace/python-sensor/
      command:
      - /workspace/python-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-unittest-default-task
spec:
  sidecars:
    - name: google-cloud-pubsub
      image: quay.io/thekevjames/gcloud-pubsub-emulator:latest
      env:
        - name: PUBSUB_EMULATOR_HOST
          value: 0.0.0.0:8681
        - name: PUBSUB_PROJECT1
          value: test-project,test-topic
      ports:
        - containerPort: 8681
          hostPort: 8681
    - name: mariadb
      image: public.ecr.aws/docker/library/mariadb:11.3.2
      env:
        - name: MYSQL_ROOT_PASSWORD # or MARIADB_ROOT_PASSWORD
          value: passw0rd
        - name: MYSQL_DATABASE # or MARIADB_DATABASE
          value: instana_test_db
    - name: mongo
      image: public.ecr.aws/docker/library/mongo:7.0.6
    - name: postgres
      image: public.ecr.aws/docker/library/postgres:16.2-bookworm
      env:
        - name: POSTGRES_USER
          value: root
        - name: POSTGRES_PASSWORD
          value: passw0rd
        - name: POSTGRES_DB
          value: instana_test_db
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - pg_isready --host 127.0.0.1 --port 5432 --dbname=${POSTGRES_DB}
        timeoutSeconds: 10
    - name: redis
      image: public.ecr.aws/docker/library/redis:7.2.4-bookworm
    - name: rabbitmq
      image: public.ecr.aws/docker/library/rabbitmq:3.13.0
  params:
  - name: imageDigest
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: default
      workingDir: /workspace/python-sensor/
      command:
      - /workspace/python-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-unittest-aws-task
spec:
  params:
  - name: imageDigest
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: aws
      workingDir: /workspace/python-sensor/
      command:
      - /workspace/python-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-unittest-kafka-task
spec:
  sidecars:
    - name: kafka
      image: public.ecr.aws/bitnami/kafka:3.9.0
      env:
        - name: KAFKA_CFG_NODE_ID
          value: "0"
        - name: KAFKA_CFG_PROCESS_ROLES
          value: "controller,broker"
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka:9093"
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"
  params:
  - name: imageDigest
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: $(params.imageDigest)
      env:
        - name: TEST_CONFIGURATION
          value: kafka
      workingDir: /workspace/python-sensor/
      command:
      - /workspace/python-sensor/.tekton/run_unittests.sh
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: python-tracer-unittest-python-next-task
spec:
  sidecars:
    - name: google-cloud-pubsub
      image: quay.io/thekevjames/gcloud-pubsub-emulator:latest
      env:
        - name: PUBSUB_EMULATOR_HOST
          value: 0.0.0.0:8681
        - name: PUBSUB_PROJECT1
          value: test-project,test-topic
      ports:
        - containerPort: 8681
          hostPort: 8681
    - name: mariadb
      image: public.ecr.aws/docker/library/mariadb:11.3.2
      env:
        - name: MYSQL_ROOT_PASSWORD # or MARIADB_ROOT_PASSWORD
          value: passw0rd
        - name: MYSQL_DATABASE # or MARIADB_DATABASE
          value: instana_test_db
    - name: mongo
      image: public.ecr.aws/docker/library/mongo:7.0.6
    - name: postgres
      image: public.ecr.aws/docker/library/postgres:16.2-bookworm
      env:
        - name: POSTGRES_USER
          value: root
        - name: POSTGRES_PASSWORD
          value: passw0rd
        - name: POSTGRES_DB
          value: instana_test_db
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - pg_isready --host 127.0.0.1 --port 5432 --dbname=${POSTGRES_DB}
        timeoutSeconds: 10
    - name: redis
      image: public.ecr.aws/docker/library/redis:7.2.4-bookworm
    - name: rabbitmq
      image: public.ecr.aws/docker/library/rabbitmq:3.13.0
  params:
  - name: py-version
    type: string
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: unittest
      image: public.ecr.aws/docker/library/python:$(params.py-version)
      env:
        - name: TEST_CONFIGURATION
          value: default
      workingDir: /workspace/python-sensor/
      command:
      - /workspace/python-sensor/.tekton/run_unittests.sh
