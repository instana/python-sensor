# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: stan.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='stan.proto',
  package='stan',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\nstan.proto\x12\x04stan\"#\n\x0fIncomingMessage\x12\x10\n\x08ToDigest\x18\x01 \x01(\t\"7\n\x0fOutgoingMessage\x12\x10\n\x08Response\x18\x01 \x01(\t\x12\x12\n\nWasHandled\x18\x02 \x01(\x08\x32\x42\n\x04Stan\x12:\n\x08SayHello\x12\x15.stan.IncomingMessage\x1a\x15.stan.OutgoingMessage\"\x00\x62\x06proto3')
)




_INCOMINGMESSAGE = _descriptor.Descriptor(
  name='IncomingMessage',
  full_name='stan.IncomingMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ToDigest', full_name='stan.IncomingMessage.ToDigest', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=55,
)


_OUTGOINGMESSAGE = _descriptor.Descriptor(
  name='OutgoingMessage',
  full_name='stan.OutgoingMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Response', full_name='stan.OutgoingMessage.Response', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='WasHandled', full_name='stan.OutgoingMessage.WasHandled', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=57,
  serialized_end=112,
)

DESCRIPTOR.message_types_by_name['IncomingMessage'] = _INCOMINGMESSAGE
DESCRIPTOR.message_types_by_name['OutgoingMessage'] = _OUTGOINGMESSAGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

IncomingMessage = _reflection.GeneratedProtocolMessageType('IncomingMessage', (_message.Message,), dict(
  DESCRIPTOR = _INCOMINGMESSAGE,
  __module__ = 'stan_pb2'
  # @@protoc_insertion_point(class_scope:stan.IncomingMessage)
  ))
_sym_db.RegisterMessage(IncomingMessage)

OutgoingMessage = _reflection.GeneratedProtocolMessageType('OutgoingMessage', (_message.Message,), dict(
  DESCRIPTOR = _OUTGOINGMESSAGE,
  __module__ = 'stan_pb2'
  # @@protoc_insertion_point(class_scope:stan.OutgoingMessage)
  ))
_sym_db.RegisterMessage(OutgoingMessage)



_STAN = _descriptor.ServiceDescriptor(
  name='Stan',
  full_name='stan.Stan',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=114,
  serialized_end=180,
  methods=[
  _descriptor.MethodDescriptor(
    name='SayHello',
    full_name='stan.Stan.SayHello',
    index=0,
    containing_service=None,
    input_type=_INCOMINGMESSAGE,
    output_type=_OUTGOINGMESSAGE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_STAN)

DESCRIPTOR.services_by_name['Stan'] = _STAN

# @@protoc_insertion_point(module_scope)
